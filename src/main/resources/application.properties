spring.application.name=travelsafebackend
spring.config.import=optional:file:env.properties

spring.datasource.url=${POSTGRES_URL}
spring.datasource.username=${POSTGRES_USERNAME}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
app.frontend.base-url=${APP_FRONTEND_BASE_URL}

jwt.secret=${JWT_SECRET}
jwt.expiration=86400000

cors.allowed-origins=http://localhost:5173
spring.servlet.multipart.enabled=true
server.port=8080

geodb.api.key=${GEODB_API_KEY}
cloudinary.cloud_name=${CLOUD_NAME}
cloudinary.api_key=${API_KEY}
cloudinary.api_secret=${API_SECRET}

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${GMAIL_FROM}
spring.mail.password=${GMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.enable=false
spring.mail.transport.protocol=smtp
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.debug=true

spring.security.oauth2.client.registration.google.client-id=${CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=Google

gnews.apiKey=${GNEWS_API_KEY}
