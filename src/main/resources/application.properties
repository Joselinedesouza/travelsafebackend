spring.application.name=travelsafebackend
spring.config.import=optional:file:env.properties

# ========== DATABASE (valori letti dalle ENV) ==========
spring.datasource.url=${POSTGRES_URL}
spring.datasource.username=${POSTGRES_USERNAME}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ========== FRONTEND URL & CORS ==========
# Usa l'URL del frontend dalle ENV; in DEV fa fallback a http://localhost:5173
app.frontend.base-url=${APP_FRONTEND_BASE_URL:http://localhost:5173}
# CORS: consenti l'origin del frontend; stesso fallback in DEV
cors.allowed-origins=${APP_FRONTEND_BASE_URL:http://localhost:5173}

# ========== JWT ==========
jwt.secret=${JWT_SECRET}
jwt.expiration=86400000

spring.servlet.multipart.enabled=true

# ========== SERVER / PROXY (Koyeb) ==========
server.port=${PORT:8080}
server.forward-headers-strategy=framework
server.tomcat.remoteip.remote-ip-header=x-forwarded-for
server.tomcat.remoteip.protocol-header=x-forwarded-proto

# ========== INTEGRAZIONI VARIE ==========
geodb.api.key=${GEODB_API_KEY}
cloudinary.cloud_name=${CLOUD_NAME}
cloudinary.api_key=${API_KEY}
cloudinary.api_secret=${API_SECRET}

# ========== MAIL (Gmail con App Password O Mailtrap) ==========
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${GMAIL_FROM}
spring.mail.password=${GMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.enable=false
spring.mail.transport.protocol=smtp
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.debug=true
# Timeout utili per evitare blocchi lunghi
spring.mail.properties.mail.smtp.connectiontimeout=10000
spring.mail.properties.mail.smtp.timeout=10000
spring.mail.properties.mail.smtp.writetimeout=10000
# Mittente (deve coincidere con spring.mail.username per Gmail)
spring.mail.from=${GMAIL_FROM}

# Token reset password (ore)
app.password-reset.token-hours=1

# ========== OAUTH GOOGLE ==========
spring.security.oauth2.client.registration.google.client-id=${CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri=https://unexpected-marlin-developerfull-stack-3191ab60.koyeb.app/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=Google

# ========== ALTRO ==========
gnews.apiKey=${GNEWS_API_KEY}

# durata token verifica email (ore)
app.email-verification.token-hours=24
